diff -r 189b86189cc9 sysemu.h
--- a/sysemu.h	Wed Feb 23 18:02:40 2011 +0000
+++ b/sysemu.h	Wed Feb 23 20:46:06 2011 +0000
@@ -28,9 +28,11 @@
 void qemu_system_reset_request(void);
 void qemu_system_shutdown_request(void);
 void qemu_system_powerdown_request(void);
+void qemu_system_exit_request(void);
 int qemu_shutdown_requested(void);
 int qemu_reset_requested(void);
 int qemu_powerdown_requested(void);
+int qemu_exit_requested(void);
 #if !defined(TARGET_SPARC) && !defined(TARGET_I386)
 // Please implement a power failure function to signal the OS
 #define qemu_system_powerdown() do{}while(0)
diff -r 189b86189cc9 vl.c
--- a/vl.c	Wed Feb 23 18:02:40 2011 +0000
+++ b/vl.c	Wed Feb 23 20:46:06 2011 +0000
@@ -3624,6 +3624,7 @@
 static int reset_requested;
 static int shutdown_requested;
 static int powerdown_requested;
+static int exit_requested;
 
 int qemu_shutdown_requested(void)
 {
@@ -3643,6 +3644,13 @@
 {
     int r = powerdown_requested;
     powerdown_requested = 0;
+    return r;
+}
+
+int qemu_exit_requested(void)
+{
+    int r = exit_requested;
+    exit_requested = 0;
     return r;
 }
 
@@ -3697,6 +3705,11 @@
     fprintf(stderr, "requesting powerdown\n");
     if (cpu_single_env)
         cpu_interrupt(cpu_single_env, CPU_INTERRUPT_EXIT);
+}
+
+void qemu_system_exit_request(void)
+{
+    exit_requested = 1;
 }
 
 #ifdef _WIN32
@@ -3825,6 +3838,12 @@
         slirp_select_poll(&rfds, &wfds, &xfds);
     }
 #endif
+
+    if (qemu_exit_requested()) {
+        /* Flush the cache and cancel outstanding aio requests */
+        bdrv_flush_all();
+        exit(0);
+    }
 
     /* vm time timers */
     if (vm_running && likely(!(cur_cpu->singlestep_enabled & SSTEP_NOTIMER)))
diff -r 189b86189cc9 xenstore.c
--- a/xenstore.c	Wed Feb 23 18:02:40 2011 +0000
+++ b/xenstore.c	Wed Feb 23 20:46:06 2011 +0000
@@ -570,6 +570,7 @@
     } else {
         guest_path = strdup(danger_path);
     }
+    xs_watch(xsh, "@releaseDomain", "releaseDomain");
 
     if (pasprintf(&buf, "%s/keymap", guest_path) != -1)
         xs_watch(xsh, buf, KEYMAP_TOKEN); // Ignore failure -- we can muddle on.i
@@ -1284,6 +1285,7 @@
 {
     char **vec, *offset, *bpath = NULL, *buf = NULL, *drv = NULL, *image = NULL;
     unsigned int len, num, hd_index, i;
+    xc_dominfo_t dominfo;
 
     vec = xs_read_watch(xsh, &num);
     if (!vec)
@@ -1320,6 +1322,18 @@
 
     if (!strcmp(vec[XS_WATCH_TOKEN], "vcpu-set")) {
         xenstore_process_vcpu_set_event(vec);
+        goto out;
+    }
+
+    if (!strcmp(vec[XS_WATCH_TOKEN], "releaseDomain")) {
+        int rc;
+        if ( (rc=xc_domain_getinfo(xc_handle, domid, 1, &dominfo)) != 1
+            || dominfo.domid != domid || dominfo.dying)
+            qemu_system_exit_request();
+        else
+            fprintf(stderr," releaseDomain signal caught, but domain %d not dead:\n" \
+                    "   rc %d dominfo.domid %d dominfo.dying %d\n",
+                    domid, rc, dominfo.domid, dominfo.dying);
         goto out;
     }
 
