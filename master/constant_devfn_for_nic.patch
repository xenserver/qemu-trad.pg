# HG changeset patch
# Parent b36ce4c6fce065fc27bd2e1ee3e6fc46bf1aede5

Derive NIC device/function number from vif number.
Modify NIC unplug accordingly.

diff --git a/hw/pc.c b/hw/pc.c
index 6e7ae87..05edc1b 100644
--- a/hw/pc.c
+++ b/hw/pc.c
@@ -1080,7 +1080,7 @@ vga_bios_error:
         if (!pci_enabled || (nd->model && strcmp(nd->model, "ne2k_isa") == 0))
             pc_init_ne2k_isa(nd, i8259);
         else
-            pci_nic_init(pci_bus, nd, -1, "ne2k_pci");
+            pci_nic_init(pci_bus, nd, nd->devfn > 0 ? nd->devfn : -1, "ne2k_pci");
     }
 
     qemu_system_hot_add_init();
diff --git a/hw/pci.c b/hw/pci.c
index b7070e4..7cc6671 100644
--- a/hw/pci.c
+++ b/hw/pci.c
@@ -877,15 +877,19 @@ void pci_unplug_all_netifs(void)
     }
 }
 
-int pci_unplug_nic(int i)
+int pci_unplug_nic(int devfn)
 {
     NICInfo *nd;
     PCIDevice *pci_dev;
+    int index;
 
-    if (i >= nb_nics)
-        return -1;
+    nd = NULL;
+    for (index = 0; index < nb_nics; index++)
+        if (nd_table[index].devfn == devfn)
+            nd = &nd_table[index];
 
-    nd = &nd_table[i];
+    if (nd == NULL)
+        return -1;
 
     if (!nd->used)
         return -1;
diff --git a/hw/xen_platform.c b/hw/xen_platform.c
index d5ac0d3..71a5ad6 100644
--- a/hw/xen_platform.c
+++ b/hw/xen_platform.c
@@ -245,12 +245,16 @@ version_2_unplug(uint8_t type, uint8_t index)
 
     switch (type) {
     case UNPLUG_TYPE_IDE:
+        fprintf(logfile, "UNPLUG: IDE\n");
+
         ide_unplug_harddisk(index);
         break;
     case UNPLUG_TYPE_NIC: {
         int id;
 
-        if ((id = pci_unplug_nic(index)) >= 0)
+        fprintf(logfile, "UNPLUG: NIC\n");
+
+        if ((id = pci_unplug_nic((4+index)*8)) >= 0)
             net_tap_shutdown_vlan(id);
 
         break;
diff --git a/net.c b/net.c
index 9445265..d47ec2a 100644
--- a/net.c
+++ b/net.c
@@ -1593,11 +1593,28 @@ static int nic_get_free_idx(void)
     int index;
 
     for (index = 0; index < MAX_NICS; index++)
-        if (!nd_table[index].used)
+        if (!nd_table[index].used) {
+            nd_table[index].devfn = -1;
             return index;
+        }
     return -1;
 }
 
+static void nic_tap_fix_devfn(VLANState *vlan, const char *ifname)
+{
+    int index;
+    unsigned tap, vif;
+
+    if (sscanf(ifname, "tap%u.%u", &tap, &vif) != 2 || vif >= 256)
+        return;
+
+    for (index = 0; index < MAX_NICS; index++)
+        if (nd_table[index].used && nd_table[index].vlan == vlan) {
+            nd_table[index].devfn = (4+vif)*8;
+            break;
+        }
+}
+
 void qemu_check_nic_model(NICInfo *nd, const char *model)
 {
     const char *models[2];
@@ -1768,6 +1785,7 @@ int net_client_init(const char *device, const char *p)
                 pstrcpy(script_arg, sizeof(script_arg), "");
             }
             ret = net_tap_init(vlan, device, name, ifname, setup_script, down_script, script_arg);
+            nic_tap_fix_devfn(vlan, ifname);
         }
     } else
 #endif
diff --git a/net.h b/net.h
index d2e5220..29290d4 100644
--- a/net.h
+++ b/net.h
@@ -67,6 +67,7 @@ struct NICInfo {
     VLANState *vlan;
     void *private;
     int used;
+    int devfn;
 };
 
 extern int nb_nics;
