diff -r 7cd247ec06e1 console.h
--- a/console.h	Fri Nov 19 16:44:39 2010 +0000
+++ b/console.h	Fri Nov 19 16:45:08 2010 +0000
@@ -305,6 +305,8 @@ void qemu_console_copy(DisplayState *ds,
 /* sdl.c */
 void sdl_display_init(DisplayState *ds, int full_screen, int no_frame, int opengl_enabled);
 extern int grab_disabled;
+extern int display_width;
+extern int display_height;
 
 /* cocoa.m */
 void cocoa_display_init(DisplayState *ds, int full_screen);
diff -r 7cd247ec06e1 sdl.c
--- a/sdl.c	Fri Nov 19 16:44:39 2010 +0000
+++ b/sdl.c	Fri Nov 19 16:45:08 2010 +0000
@@ -61,6 +61,8 @@ int mouse_active = SDL_ENABLE;
 static uint8_t allocator;
 static SDL_PixelFormat host_format;
 static int scaling_active = 0;
+int display_width;
+int display_height;
 
 #ifdef CONFIG_OPENGL
 static GLint tex_format;
@@ -941,4 +943,11 @@ void sdl_display_init(DisplayState *ds, 
             sdl_grab_start();
         }
     }
+    if (display_width || display_height) {
+        int bpp = host_format.BitsPerPixel;
+        if (bpp != 16 && bpp != 32)
+            bpp = 32;
+        do_sdl_resize(display_width, display_height, bpp);
+        scaling_active = 1;
+    }
 }
diff -r 7cd247ec06e1 vl.c
--- a/vl.c	Fri Nov 19 16:44:39 2010 +0000
+++ b/vl.c	Fri Nov 19 16:45:08 2010 +0000
@@ -4246,6 +4246,7 @@ enum {
     QEMU_OPTION_no_quit,
     QEMU_OPTION_sdl,
     QEMU_OPTION_nograb,
+    QEMU_OPTION_geometry,
     QEMU_OPTION_portrait,
     QEMU_OPTION_vga,
     QEMU_OPTION_full_screen,
@@ -4375,6 +4376,7 @@ static const QEMUOption qemu_options[] =
     { "no-quit", 0, QEMU_OPTION_no_quit },
     { "sdl", 0, QEMU_OPTION_sdl },
     { "nograb", 0, QEMU_OPTION_nograb },
+    { "geometry", HAS_ARG, QEMU_OPTION_geometry },
 #endif
     { "portrait", 0, QEMU_OPTION_portrait },
     { "vga", HAS_ARG, QEMU_OPTION_vga },
@@ -5352,6 +5354,28 @@ int main(int argc, char **argv, char **e
             case QEMU_OPTION_nograb:
                 grab_disabled = 1;
                 break;
+            case QEMU_OPTION_geometry:
+                {
+                    const char *p;
+                    int w, h;
+                    p = optarg;
+                    w = strtol(p, (char **)&p, 10);
+                    if (w <= 0) {
+geometry_error:
+                        fprintf(stderr, "qemu: invalid display geometry\n");
+                        exit(1);
+                    }
+                    if (*p != 'x')
+                        goto geometry_error;
+                    p++;
+                    h = strtol(p, (char **)&p, 10);
+                    if ((h <= 0) || (*p != '\0'))
+                        goto geometry_error;
+
+                    display_width = w;
+                    display_height = h;
+                }
+                break;
 #endif
 
             case QEMU_OPTION_pci_emulation:
