diff --git a/block.c b/block.c
index 1379b56..0266508 100644
--- a/block.c
+++ b/block.c
@@ -360,7 +360,6 @@ int bdrv_open2(BlockDriverState *bs, const char *filename, int flags,
     char tmp_filename[PATH_MAX];
     char backing_filename[PATH_MAX];
 
-    bs->read_only = 0;
     bs->is_temporary = 0;
     bs->encrypted = 0;
     bs->valid_key = 0;
@@ -419,11 +418,13 @@ int bdrv_open2(BlockDriverState *bs, const char *filename, int flags,
     }
     bs->drv = drv;
     bs->opaque = qemu_mallocz(drv->instance_size);
-    /* Note: for compatibility, we open disk image files as RDWR, and
-       RDONLY as fallback */
-    if (!(flags & BDRV_O_FILE))
-        open_flags = (flags & BDRV_O_ACCESS) | (flags & BDRV_O_CACHE_MASK);
-    else
+    if (!(flags & BDRV_O_FILE)) {
+        open_flags = flags & BDRV_O_CACHE_MASK;
+        if (bs->read_only)
+            open_flags |= BDRV_O_RDONLY;
+        else
+            open_flags |= BDRV_O_RDWR;
+    } else
         open_flags = flags & ~(BDRV_O_FILE | BDRV_O_SNAPSHOT);
     ret = drv->bdrv_open(bs, filename, open_flags);
     if ((ret == -EACCES || ret == -EPERM) && !(flags & BDRV_O_FILE)) {
@@ -946,6 +947,11 @@ int bdrv_is_read_only(BlockDriverState *bs)
     return bs->read_only;
 }
 
+void bdrv_set_read_only(BlockDriverState *bs)
+{
+    bs->read_only = 1;
+}
+
 int bdrv_is_sg(BlockDriverState *bs)
 {
     return bs->sg;
diff --git a/block.h b/block.h
index fc0afbb..a41bc9d 100644
--- a/block.h
+++ b/block.h
@@ -129,6 +129,7 @@ int bdrv_get_type_hint(BlockDriverState *bs);
 int bdrv_get_translation_hint(BlockDriverState *bs);
 int bdrv_is_removable(BlockDriverState *bs);
 int bdrv_is_read_only(BlockDriverState *bs);
+void bdrv_set_read_only(BlockDriverState *bs);
 int bdrv_is_sg(BlockDriverState *bs);
 int bdrv_is_inserted(BlockDriverState *bs);
 int bdrv_media_changed(BlockDriverState *bs);
diff --git a/xenstore.c b/xenstore.c
index 0f59e23..42daefe 100644
--- a/xenstore.c
+++ b/xenstore.c
@@ -656,6 +656,12 @@ void xenstore_parse_domain_config(int hvm_domid)
         }
 #endif
 
+        free(mode);
+	if (pasprintf(&buf, "%s/mode", bpath) == -1)
+	    mode = NULL;
+	else
+	    mode = xs_read(xsh, XBT_NULL, buf, &len);
+
         bs = bdrv_new(dev);
         /* check if it is a cdrom */
         if (danger_type) {
@@ -676,6 +682,9 @@ void xenstore_parse_domain_config(int hvm_domid)
             }
         }
 
+        if (mode && strchr(mode, 'w') == NULL)
+            bdrv_set_read_only(bs);
+
         /* open device now if media present */
 #ifdef CONFIG_STUBDOM
         if (pasprintf(&danger_buf, "%s/device/vbd/%s", danger_path, e_danger[i]) == -1)
