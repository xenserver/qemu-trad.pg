diff --git a/qemu-char.c b/qemu-char.c
index 324ed16..6acaa8c 100644
--- a/qemu-char.c
+++ b/qemu-char.c
@@ -588,7 +588,7 @@ static CharDriverState *qemu_chr_open_file_out(const char *file_out)
 {
     int fd_out;
 
-    TFR(fd_out = open(file_out, O_WRONLY | O_TRUNC | O_CREAT | O_BINARY | O_APPEND, 0666));
+    TFR(fd_out = open(file_out, O_WRONLY | O_APPEND | O_CREAT | O_BINARY, 0666));
     if (fd_out < 0)
         return NULL;
     return qemu_chr_open_fd(-1, fd_out);
diff --git a/sysemu.h b/sysemu.h
index 968258a..1edfb9a 100644
--- a/sysemu.h
+++ b/sysemu.h
@@ -198,6 +198,7 @@ void pci_device_hot_remove_success(int pcibus, int slot);
 #define MAX_SERIAL_PORTS 4
 
 extern CharDriverState *serial_hds[MAX_SERIAL_PORTS];
+extern const char *serial_devices[MAX_SERIAL_PORTS];
 
 /* parallel ports */
 
diff --git a/vl.c b/vl.c
index a6abda8..fc98e9f 100644
--- a/vl.c
+++ b/vl.c
@@ -233,6 +233,7 @@ static int no_frame = 0;
 #endif
 int no_quit = 0;
 CharDriverState *serial_hds[MAX_SERIAL_PORTS];
+const char *serial_devices[MAX_SERIAL_PORTS];
 CharDriverState *parallel_hds[MAX_PARALLEL_PORTS];
 CharDriverState *virtcon_hds[MAX_VIRTIO_CONSOLES];
 #ifdef TARGET_I386
@@ -4821,7 +4822,6 @@ int main(int argc, char **argv, char **envp)
     const char *r, *optarg;
     CharDriverState *monitor_hd = NULL;
     const char *monitor_device;
-    const char *serial_devices[MAX_SERIAL_PORTS];
     int serial_device_index;
     const char *parallel_devices[MAX_PARALLEL_PORTS];
     int parallel_device_index;
@@ -5969,7 +5969,7 @@ int main(int argc, char **argv, char **envp)
             if (!virtcon_hds[i]) {
                 fprintf(stderr, "qemu: could not open virtio console '%s'\n",
                         devname);
-                exit(1);
+                continue;
             }
         }
     }
diff --git a/xenstore.c b/xenstore.c
index 8661135..0f59e23 100644
--- a/xenstore.c
+++ b/xenstore.c
@@ -489,6 +489,8 @@ void xenstore_parse_domain_config(int hvm_domid)
     char *buf = NULL;
     char *fpath = NULL, *bpath = NULL,
         *dev = NULL, *params = NULL, *drv = NULL;
+    char *serial_c;
+    char serial_temp[PATH_MAX - 5];
     int i, ret;
     unsigned int len, num, hd_index, pci_devid = 0;
     BlockDriverState *bs;
@@ -507,6 +509,25 @@ void xenstore_parse_domain_config(int hvm_domid)
     for(i = 0; i < MAX_DRIVES + 1; i++)
         media_filename[i] = NULL;
 
+    /* read the console output filename */
+    serial_c = xs_read(xsh, XBT_NULL, "/local/logconsole/@", NULL);
+    if (serial_c) {
+        char *device;
+
+        serial_devices[0] = device = qemu_mallocz(PATH_MAX);
+        strcpy(device, "file:");
+	if (strstr(serial_c, "%s")) {
+            char *name = xenstore_vm_read(domid, "uuid", NULL);
+            /* format string exploit from xenstore?? */
+	    snprintf(serial_temp, sizeof(serial_temp), serial_c, name);
+            free(name);
+	}else
+	    snprintf(serial_temp, sizeof(serial_temp), serial_c, domid);
+        strncat(device, serial_temp, sizeof(serial_temp));
+	free(serial_c);
+    }
+    /* we don't care if it failed or not */
+
     danger_path = xs_get_domain_path(xsh, hvm_domid);
     if (danger_path == NULL) {
         fprintf(logfile, "xs_get_domain_path() error\n");
