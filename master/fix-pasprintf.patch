Correct the indirection of buf in the vasprintf() error path.  Identify
pasprintf() as a printf-like function and fix the newly-identified issue in
xenstore_get_backend_path()

Signed-off-by: Andrew Cooper <andrew.cooper3@citrix.com>

diff --git a/xenstore.c b/xenstore.c
index cb96371..7fd4a5c 100644
--- a/xenstore.c
+++ b/xenstore.c
@@ -144,6 +144,7 @@ int xenstore_watch_new_callback(const char          *path,
 }
 
 
+static int pasprintf(char **buf, const char *fmt, ...) __attribute__((format (__printf__, 2, 3)));
 static int pasprintf(char **buf, const char *fmt, ...)
 {
     va_list ap;
@@ -153,7 +154,7 @@ static int pasprintf(char **buf, const char *fmt, ...)
         free(*buf);
     va_start(ap, fmt);
     if (vasprintf(buf, fmt, ap) == -1) {
-        buf = NULL;
+        *buf = NULL;
         ret = -1;
     }
     va_end(ap);
@@ -345,7 +346,7 @@ static void xenstore_get_backend_path(char **backend, const char *devtype,
          *expected_devtype;
          expected_devtype++) {
     
-        if (pasprintf(&expected_backend, "%s/backend/%s/%lu/%s",
+        if (pasprintf(&expected_backend, "%s/backend/%s/%u/%s",
                       backend_dompath, *expected_devtype,
                       frontend_domid, inst_danger)
             == -1) goto out;
