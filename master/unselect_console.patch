unselect_console.patch

From: Frediano Ziglio <frediano.ziglio@citrix.com>

Deselect console if not required.

If the console is selected cirrus driver update the VGA memory. This cause
video memory to be allocated even if nobody is interested to.

Deselecting it if we don't have any VNC connection cause to not allocate
and update this memory.

diff --git a/console.c b/console.c
index 451a094..b85fa5b 100644
--- a/console.c
+++ b/console.c
@@ -167,7 +167,7 @@ void vga_hw_update(void)
 
 void vga_hw_invalidate(void)
 {
-    if (active_console->hw_invalidate)
+    if (active_console && active_console->hw_invalidate)
         active_console->hw_invalidate(active_console->hw);
 }
 
@@ -1027,14 +1027,17 @@ void console_select(unsigned int index)
 
     if (index >= MAX_CONSOLES)
         return;
-    active_console->g_width = ds_get_width(active_console->ds);
-    active_console->g_height = ds_get_height(active_console->ds);
+    if (active_console) {
+        active_console->g_width = ds_get_width(active_console->ds);
+        active_console->g_height = ds_get_height(active_console->ds);
+    }
     s = consoles[index];
     if (s) {
         DisplayState *ds = s->ds;
         active_console = s;
         if (ds_get_bits_per_pixel(s->ds)) {
-            ds->surface = qemu_resize_displaysurface(ds, s->g_width, s->g_height);
+            if (s->console_type != GRAPHIC_CONSOLE)
+                ds->surface = qemu_resize_displaysurface(ds, s->g_width, s->g_height);
         } else {
             s->ds->surface->width = s->width;
             s->ds->surface->height = s->height;
@@ -1044,6 +1047,20 @@ void console_select(unsigned int index)
     }
 }
 
+void console_unselect(void)
+{
+    if (active_console) {
+        active_console->g_width = ds_get_width(active_console->ds);
+        active_console->g_height = ds_get_height(active_console->ds);
+        active_console = NULL;
+    }
+}
+
+int is_console_selected(void)
+{
+    return active_console != NULL;
+}
+
 static int console_puts(CharDriverState *chr, const uint8_t *buf, int len)
 {
     TextConsole *s = chr->opaque;
diff --git a/console.h b/console.h
index 63ebe30..ebb68b8 100644
--- a/console.h
+++ b/console.h
@@ -309,6 +309,8 @@ int is_fixedsize_console(void);
 CharDriverState *text_console_init(const char *p);
 void text_consoles_set_display(DisplayState *ds);
 void console_select(unsigned int index);
+void console_unselect(void);
+int is_console_selected(void);
 void console_color_init(DisplayState *ds);
 void qemu_console_resize(DisplayState *ds, int width, int height);
 void qemu_console_copy(DisplayState *ds, int src_x, int src_y,
diff --git a/vnc.c b/vnc.c
index 4ba677c..a41e549 100644
--- a/vnc.c
+++ b/vnc.c
@@ -435,6 +435,9 @@ static void vnc_clean_surface(VncDisplay *vd, int data)
         vd->ds->surface->data = NULL;
         vd->ds->surface->flags &= ~QEMU_ALLOCATED_FLAG;
     }
+
+    /* deactivate console to avoid buffer to be created again */
+    console_unselect();
 }
 
 static int vnc_update_surface(VncDisplay *vd)
@@ -2630,6 +2633,10 @@ static void vnc_connect(VncDisplay *vd, int csock)
     socket_set_nonblock(vs->csock);
     qemu_set_fd_handler2(vs->csock, NULL, vnc_client_read, NULL, vs);
 
+    /* assure we have a console */
+    if (!is_console_selected())
+        console_select(0);
+
     /* here we must be sure we have a surface */
     vnc_create_surface(vd);
 
@@ -2725,6 +2732,8 @@ void vnc_display_init(DisplayState *ds)
     dcl->dpy_resize = vnc_dpy_resize;
     dcl->dpy_setdata = vnc_dpy_setdata;
     register_displaychangelistener(ds, dcl);
+
+    vnc_clean_surface(vs, 1);
 }
 
 #ifdef CONFIG_VNC_TLS
