From 9d2b3fb5fe1647a5f5a0514f917ddb4cce6adce4 Mon Sep 17 00:00:00 2001
From: David Vrabel <david.vrabel@citrix.com>
Date: Tue, 4 Nov 2014 11:54:11 +0000
Subject: [PATCH 4/4] block-vvfat: fix fat_chksum() buffer overrun warning

Newer GCC versions raise an undefined behaviour warning in
fat_chksum() because it overruns the name buffer.  However, this is
intentional behaviour because the extension array immediately follows.

Refactor this function to avoid the warning and make it clear it's
checksumming both parts.
---
 block-vvfat.c |   15 +++++++++++----
 1 file changed, 11 insertions(+), 4 deletions(-)

diff --git a/block-vvfat.c b/block-vvfat.c
index 9eb676b..c493e8c 100644
--- a/block-vvfat.c
+++ b/block-vvfat.c
@@ -504,14 +504,21 @@ static void set_begin_of_direntry(direntry_t* direntry, uint32_t begin)
 
 /* fat functions */
 
+static inline void fat_chksum_part(const char *name, size_t len, uint8_t *chksum)
+{
+    int i;
+
+    for(i=0;i<len;i++)
+	*chksum=(((*chksum&0xfe)>>1)|((*chksum&0x01)?0x80:0))
+	    +(unsigned char)name[i];
+}
+
 static inline uint8_t fat_chksum(const direntry_t* entry)
 {
     uint8_t chksum=0;
-    int i;
 
-    for(i=0;i<11;i++)
-	chksum=(((chksum&0xfe)>>1)|((chksum&0x01)?0x80:0))
-	    +(unsigned char)entry->name[i];
+    fat_chksum_part(entry->name, ARRAY_SIZE(entry->name), &chksum);
+    fat_chksum_part(entry->extension, ARRAY_SIZE(entry->extension), &chksum);
 
     return chksum;
 }
-- 
1.7.10.4

